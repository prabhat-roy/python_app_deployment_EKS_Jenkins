pipeline {
     agent any
    environment {
         GITHUB_URL = "https://github.com/prabhat-roy/python_app_deployment_EKS_Jenkins.git"
         BRANCH = "main"
         SCANNER_HOME =tool "SonarQube"
         IMAGE_NAME = "simpletimeservice"         
         ACC_ID = "873330726955"
         REGION = "ap-south-2"
         ECR = "${ACC_ID}.dkr.ecr.${REGION}.amazonaws.com"
    }
    stages {
        stage("Checkout from Git Repo") {
            steps {
                git branch: "${BRANCH}", url: "$GITHUB_URL"
            }
        }
        stage("Trivy file scan") {
            steps {
                sh 'trivy fs .'
            }
        }
        stage("SonarQube Analysis") {
            steps {
                 withSonarQubeEnv('SonarQube') {
                    sh '$SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=SimpleTimeService -Dsonar.projectKey=SimpleTimeService'
                 }
            }
        }
        stage("Create Docker Image") {
            steps {
                sh 'docker build -t ${IMAGE_NAME}:${BUILD_NUMBER} .'
            }
        }
        stage("Trivy Image Scan") {
            steps {
                sh 'trivy image ${IMAGE_NAME}:${BUILD_NUMBER}'
            }
        }
        stage("Syft Image Scan") {
            steps {
                sh 'syft ${IMAGE_NAME}:${BUILD_NUMBER}'
            }
        }
        stage("Grype Image Scan") {
            steps {
                sh 'grype ${IMAGE_NAME}:${BUILD_NUMBER}'
            }
        }
        stage("AWS ECR login and image push") {
            steps {
                script {
                    sh '''
                        aws ecr get-login-password --region ${REGION} | docker login --username AWS --password-stdin ${ECR}
                        docker tag ${IMAGE_NAME}:${BUILD_NUMBER} ${ECR}/${IMAGE_NAME}:${BUILD_NUMBER}
                        docker push ${ECR}/${IMAGE_NAME}:${BUILD_NUMBER}
                    '''
                }
            }
        }
        stage("Update Kubeconfig file") {
            steps {
                sh 'aws eks update-kubeconfig --region ap-south-2 --name EKS-Cluster'
            }
        }
        stage("Check the worker node") {
            steps {
                sh 'kubectl get nodes -o wide'
            }
        }
        stage("Kubernetes Deployment") {
            steps {
                script {
                    sh 'sed -i "s/TAG/${BUILD_NUMBER}/" Kubernetes/deployment.yaml'
                    sh 'kubectl apply -f Kubernetes/namespace.yaml'
                    sh 'kubectl apply -f Kubernetes/deployment.yaml -n simpletimeservice'
                    sh 'kubectl apply -f Kubernetes/service.yaml -n simpletimeservice'
                }
            }
        }
        stage("Wait few moments") {
            steps {
                sleep(time:60, unit: "SECONDS")
            }
        }
        stage("Get the deployment details") {
            steps {
                script {
                    sh 'kubectl get namespace'
                    sh 'kubectl get pods -n simpletimeservice'
                    sh 'kubectl get services -n simpletimeservice'
                }
            }
        }
        stage("Remove docker images") {
            steps {
                sh 'docker rmi -f ${IMAGE_NAME}:${BUILD_NUMBER}'            }
        }
    }
}
